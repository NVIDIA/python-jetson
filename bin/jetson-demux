#!/usr/bin/python3

import argparse, selectors, sys

import jetson.tcu

def print_streams(demux, fileobj = sys.stdout):
    length = 0

    for name, path in demux.get_streams().items():
        if len(name) > length:
            length = len(name)

    for name, path in demux.get_streams().items():
        print('%-*s %s' % (length + 1, '%s:' % name, path), file = fileobj)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--device', type = str, required = True)
    args = parser.parse_args()

    try:
        demux = jetson.tcu.Demux(args.device)
    except OSError as e:
        print('%s: %s' % (e.filename, e.strerror))
        sys.exit(1)

    print_streams(demux)

    selector = selectors.DefaultSelector()
    demux.select(selector)
    demux.reset()

    while True:
        try:
            events = selector.select()
        except KeyboardInterrupt as e:
            print()
            break

        for key, mask in events:
            key.data(key.fileobj, mask)
